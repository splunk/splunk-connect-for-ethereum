# The following environment variables are substituted if present
# * QUORUM_CONSENSUS: default to istanbul
# * QUORUM_DOCKER_IMAGE: default to quorumengineering/quorum:2.5.0
# * QUORUM_TX_MANAGER_DOCKER_IMAGE: default to quorumengineering/tessera:0.10.2
# * QUORUM_GETH_ARGS: extra geth arguments to be included when running geth
# To use Constellation, set QUORUM_TX_MANAGER_DOCKER_IMAGE to Constellation docker image,
# e.g.: QUORUM_TX_MANAGER_DOCKER_IMAGE=quorumengineering/constellation:0.3.2 docker-compose up -d
# To use Remix, set QUORUM_GETH_ARGS="--rpccorsdomain https://remix.ethereum.org"
version: "2.3"
x-quorum-def:
  &quorum-def
  restart: "on-failure"
  image: "${DOCKER_REGISTRY:-}${QUORUM_DOCKER_IMAGE:-quorumengineering/quorum:2.5.0}"
  healthcheck:
    test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:${QUORUM_RPC_PORT:-8545}"]
    interval: 3s
    timeout: 3s
    retries: 10
    start_period: 5s
  labels:
    com.quorum.consensus: ${QUORUM_CONSENSUS:-istanbul}
  entrypoint:
    - /bin/sh
    - -c
    - |
      UDS_WAIT=10
      if [ "$${PRIVATE_CONFIG}" != "ignore" ]; then
      for i in $$(seq 1 100)
      do
        set -e
        if [ -S $${PRIVATE_CONFIG} ] && \
          [ "I'm up!" == "$$(wget --timeout $${UDS_WAIT} -qO- --proxy off ${DOCKER_IP}$${NODE_ID}:${TESSERA_P2P_PORT:-9000}/upcheck)" ];
        then break
        else
          echo "Sleep $${UDS_WAIT} seconds. Waiting for TxManager."
          sleep $${UDS_WAIT}
        fi
      done
      fi
      DDIR=/qdata/dd
      rm -rf $${DDIR}
      mkdir -p $${DDIR}
      cp -r /examples/dd$${NODE_ID}/* $${DDIR}
      cp /examples/dd$${NODE_ID}/permissioned-nodes.json $${DDIR}/static-nodes.json
      cp $${DDIR}/static-nodes.json $${DDIR}/permissioned-nodes.json
      cat $${DDIR}/static-nodes.json
      GENESIS_FILE="/examples/dd$${NODE_ID}/genesis.json"
      NETWORK_ID=$$(cat $${GENESIS_FILE} | grep chainId | awk -F " " '{print $$2}' | awk -F "," '{print $$1}')
      GETH_ARGS_raft="--raft --raftport ${QUORUM_RAFT_PORT:-50400}"
      GETH_ARGS_istanbul="--emitcheckpoints --istanbul.blockperiod 1 --mine --minerthreads 1 --syncmode full"
      EXTRA_ARGS=${QUORUM_GETH_ARGS:-}
      geth --datadir $${DDIR} init $${GENESIS_FILE}
      geth \
        --identity node$${NODE_ID}-${QUORUM_CONSENSUS:-istanbul} \
        --datadir $${DDIR} \
        --permissioned \
        --nodiscover \
        --verbosity 5 \
        --networkid $${NETWORK_ID} \
        --rpc \
        --rpccorsdomain "*" \
        --rpcvhosts "*" \
        --rpcaddr 0.0.0.0 \
        --rpcport ${QUORUM_RPC_PORT:-8545} \
        --rpcapi admin,db,eth,debug,miner,net,shh,txpool,personal,web3,quorum,${QUORUM_CONSENSUS:-istanbul} \
        --ws \
        --wsaddr 0.0.0.0 \
        --wsorigins "*" \
        --wsport ${QUORUM_WS_PORT:-8645} \
        --port ${QUORUM_P2P_PORT:-21000} \
        --unlock 0 \
        --password $${DDIR}/keystore/password.txt \
        $${GETH_ARGS_${QUORUM_CONSENSUS:-istanbul}} \
        $$EXTRA_ARGS
  expose:
    - "${QUORUM_P2P_PORT:-21000}"
    - "${QUORUM_RAFT_PORT:-50400}"
x-tx-manager-def:
  &tx-manager-def
  image: "${DOCKER_REGISTRY:-}${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:0.10.2}"
  restart: "no"
  healthcheck:
    test: ["CMD-SHELL", "[ -S /qdata/tm/tm.ipc ] || exit 1"]
    interval: 3s
    timeout: 3s
    retries: 20
    start_period: 5s
  entrypoint:
    - /bin/sh
    - -c
    - |
      DDIR=/qdata/tm
      rm -rf $${DDIR}
      mkdir -p $${DDIR}
      DOCKER_IMAGE="${QUORUM_TX_MANAGER_DOCKER_IMAGE:-quorumengineering/tessera:0.10.2}"
      TX_MANAGER=$$(echo $${DOCKER_IMAGE} | sed 's/^.*\/\(.*\):.*$$/\1/g')
      echo "TxManager: $${TX_MANAGER}"
      case $${TX_MANAGER}
      in
        tessera)
          cp -r /examples/c$${NODE_ID}/* $${DDIR}
          #extract the tessera version from the jar
          TESSERA_VERSION=$$(unzip -p /tessera/tessera-app.jar META-INF/MANIFEST.MF | grep Tessera-Version | cut -d" " -f2)
          echo "Tessera version (extracted from manifest file): $${TESSERA_VERSION}"
          # sorting versions to target correct configuration
          V08=$$(echo -e "0.8\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
          V09AndAbove=$$(echo -e "0.9\n$${TESSERA_VERSION}" | sort -n -r -t '.' -k 1,1 -k 2,2 | head -n1)
          TESSERA_CONFIG_TYPE="-09"
          case "$${TESSERA_VERSION}" in
              "$${V09AndAbove}")
                  TESSERA_CONFIG_TYPE="-09"
                  ;;
          esac

          echo Config type $${TESSERA_CONFIG_TYPE}

          HOSTNAME=$$(hostname -i)
          sed -i "s,%THIS_PRIV_KEY%,$${DDIR}/tm.key,g" $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          sed -i "s,%THIS_PUB_KEY%,$${DDIR}/tm.pub,g" $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          sed -i 's,etc/quorum/,,g' $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          sed -i 's/%QUORUM-NODE\([0-9]\)_SERVICE_HOST%/txmanager\1/g' $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          sed -i "s/%THIS_SERVICE_HOST%/$${HOSTNAME}/g" $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json

          cat $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          java -Xms128M -Xmx128M -jar /tessera/tessera-app.jar -configfile $${DDIR}/tessera-config$${TESSERA_CONFIG_TYPE}.json
          ;;
        *)
          echo "Invalid Transaction Manager"
          exit 1
          ;;
      esac
  expose:
    - "${TESSERA_P2P_PORT:-9000}"
    - "${TESSERA_3PARTY_PORT:-9080}"
x-tx-gen-def:
  &tx-gen-def
  image: splunkdlt/ethereum-transaction-generator:latest
  entrypoint:
    - tail
    - -f
    - /dev/null
x-logging:
  &default-logging
  driver: splunk
  options:
    splunk-token: 11111111-1111-1111-1111-1111111111113
    splunk-url: https://localhost:8088
    splunk-index: logs
    splunk-sourcetype: docker
    splunk-insecureskipverify: "true"
    splunk-verify-connection: "false"
    splunk-format: "raw"
    tag: "{{.Name}}-{{.ID}}"

x-cadvisor-def:
  &cadvisor-def
  image: google/cadvisor:latest
  command:
    - --storage_driver=statsd
    - --storage_driver_host=172.16.20.66:8125
    - --docker_only=true
  user: root

x-ethlogger1-def:
  &ethlogger1-def
  image: splunkdlt/ethlogger:latest
  environment:
    - ETH_RPC_URL=http://node1:8545
    - NETWORK_NAME=quorum
    - START_AT_BLOCK=genesis
    - SPLUNK_HEC_URL=https://172.16.20.66:8088
    - SPLUNK_HEC_TOKEN=11111111-1111-1111-1111-1111111111113
    - SPLUNK_EVENTS_INDEX=ethereum
    - SPLUNK_METRICS_INDEX=metrics
    - SPLUNK_INTERNAL_INDEX=metrics
    - SPLUNK_HEC_REJECT_INVALID_CERTS=false
    - ABI_DIR=/app/abis
    - COLLECT_PEER_INFO=true
    - DEBUG=ethlogger:abi:*
  depends_on:
    - node1
  restart: unless-stopped
x-ethlogger2-def:
  &ethlogger2-def
  image: splunkdlt/ethlogger:latest
  environment:
    - ETH_RPC_URL=http://node2:8545
    - NETWORK_NAME=quorum
    - START_AT_BLOCK=genesis
    - SPLUNK_HEC_URL=https://172.16.20.66:8088
    - SPLUNK_HEC_TOKEN=11111111-1111-1111-1111-1111111111113
    - SPLUNK_EVENTS_INDEX=ethereum
    - SPLUNK_METRICS_INDEX=metrics
    - SPLUNK_INTERNAL_INDEX=metrics
    - SPLUNK_HEC_REJECT_INVALID_CERTS=false
    - ABI_DIR=/app/abis
    - COLLECT_PEER_INFO=true
    - DEBUG=ethlogger:abi:*
  depends_on:
    - node2
  restart: unless-stopped
x-ethlogger3-def:
  &ethlogger3-def
  image: splunkdlt/ethlogger:latest
  environment:
    - ETH_RPC_URL=http://node3:8545
    - NETWORK_NAME=quorum
    - START_AT_BLOCK=genesis
    - SPLUNK_HEC_URL=https://172.16.20.66:8088
    - SPLUNK_HEC_TOKEN=11111111-1111-1111-1111-1111111111113
    - SPLUNK_EVENTS_INDEX=ethereum
    - SPLUNK_METRICS_INDEX=metrics
    - SPLUNK_INTERNAL_INDEX=metrics
    - SPLUNK_HEC_REJECT_INVALID_CERTS=false
    - ABI_DIR=/app/abis
    - COLLECT_PEER_INFO=true
    - DEBUG=ethlogger:abi:*
  depends_on:
    - node3
  restart: unless-stopped
services:
  node1:
    << : *quorum-def
    container_name: node1
    hostname: node1
    ports:
      - "22000:8545"
      - "23000:8645"
      - "24000:8547"
    volumes:
      - 3-nodes-istanbul-tessera-docker-compose-vol1:/qdata
      - ./qdata:/examples:ro
    depends_on:
      - txmanager1
    environment:
      - PRIVATE_CONFIG=/qdata/tm/tm.ipc
      - NODE_ID=1
    networks:
      3-nodes-istanbul-tessera-docker-compose-net:
        ipv4_address: 172.16.20.11
    logging: *default-logging
  txmanager1:
    << : *tx-manager-def
    container_name: txmanager1
    hostname: txmanager1
    ports:
      - "9081:9080"
    volumes:
      - 3-nodes-istanbul-tessera-docker-compose-vol1:/qdata
      - ./qdata:/examples:ro
    networks:
      3-nodes-istanbul-tessera-docker-compose-net:
        ipv4_address: 172.16.20.101
    environment:
      - NODE_ID=1
    logging: *default-logging
  node2:
    << : *quorum-def
    container_name: node2
    hostname: node2
    ports:
      - "22001:8545"
      - "23001:8645"
      - "24001:8547"
    volumes:
      - 3-nodes-istanbul-tessera-docker-compose-vol2:/qdata
      - ./qdata:/examples:ro
    depends_on:
      - txmanager2
    environment:
      - PRIVATE_CONFIG=/qdata/tm/tm.ipc
      - NODE_ID=2
    networks:
      3-nodes-istanbul-tessera-docker-compose-net:
        ipv4_address: 172.16.20.12
    logging: *default-logging
  txmanager2:
    << : *tx-manager-def
    container_name: txmanager2
    hostname: txmanager2
    ports:
      - "9082:9080"
    volumes:
      - 3-nodes-istanbul-tessera-docker-compose-vol2:/qdata
      - ./qdata:/examples:ro
    networks:
      3-nodes-istanbul-tessera-docker-compose-net:
        ipv4_address: 172.16.20.102
    environment:
      - NODE_ID=2
    logging: *default-logging
  node3:
    << : *quorum-def
    container_name: node3
    hostname: node3
    ports:
      - "22002:8545"
      - "23002:8645"
      - "24002:8547"
    volumes:
      - 3-nodes-istanbul-tessera-docker-compose-vol3:/qdata
      - ./qdata:/examples:ro
    depends_on:
      - txmanager3
    environment:
      - PRIVATE_CONFIG=/qdata/tm/tm.ipc
      - NODE_ID=3
    networks:
      3-nodes-istanbul-tessera-docker-compose-net:
        ipv4_address: 172.16.20.13
    logging: *default-logging
  txmanager3:
    << : *tx-manager-def
    container_name: txmanager3
    hostname: txmanager3
    ports:
      - "9083:9080"
    volumes:
      - 3-nodes-istanbul-tessera-docker-compose-vol3:/qdata
      - ./qdata:/examples:ro
    networks:
      3-nodes-istanbul-tessera-docker-compose-net:
        ipv4_address: 172.16.20.103
    environment:
      - NODE_ID=3
    logging: *default-logging
  ethlogger1:
    << : *ethlogger1-def
    container_name: ethlogger1
    hostname: ethlogger1
    volumes:
      - ./out/config/splunk/abis:/app/abis:ro
      - ethlogger-state1:/app
    networks:
      - 3-nodes-istanbul-tessera-docker-compose-net
    logging: *default-logging
  ethlogger2:
    << : *ethlogger2-def
    container_name: ethlogger2
    hostname: ethlogger2
    volumes:
      - ./out/config/splunk/abis:/app/abis:ro
      - ethlogger-state2:/app
    networks:
      - 3-nodes-istanbul-tessera-docker-compose-net
    logging: *default-logging
  ethlogger3:
    << : *ethlogger3-def
    container_name: ethlogger3
    hostname: ethlogger3
    volumes:
      - ./out/config/splunk/abis:/app/abis:ro
      - ethlogger-state3:/app
    networks:
      - 3-nodes-istanbul-tessera-docker-compose-net
    logging: *default-logging
  cadvisor:
    << : *cadvisor-def
    container_name: cadvisor
    hostname: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - 3-nodes-istanbul-tessera-docker-compose-net
    logging: *default-logging
networks:
  3-nodes-istanbul-tessera-docker-compose-net:
    name: 3-nodes-istanbul-tessera-docker-compose-net
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.16.20.0/24
volumes:
  "ethlogger-state1":
  "ethlogger-state2":
  "ethlogger-state3":
  "3-nodes-istanbul-tessera-docker-compose-vol1":
  "3-nodes-istanbul-tessera-docker-compose-vol2":
  "3-nodes-istanbul-tessera-docker-compose-vol3":
  "3-nodes-istanbul-tessera-docker-compose-cakeshopvol":